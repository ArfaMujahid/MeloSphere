/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.6
 * Generated at: 2023-05-11 11:04:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.Music.Song;
import com.melosphere.*;
import java.util.List;
import java.util.ArrayList;

public final class ArtistViewUploadedSong_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("com.melosphere");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.Music.Song");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../../resources/apple-touch-icon.png\" />\r\n");
      out.write("<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"./resources/apple-touch-icon.png\" />\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"./resources/favicon-32x32.png\" />\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"./resources/favicon-16x16.png\" />\r\n");
      out.write("<link rel=\"manifest\" href=\"./resources/site.webmanifest\" />\r\n");
      out.write("<link rel=\"mask-icon\" href=\"./resources/safari-pinned-tab.svg\" color=\"#5bbad5\" />\r\n");
      out.write("<meta name=\"msapplication-TileColor\" content=\"#da532c\" />\r\n");
      out.write("<meta name=\"theme-color\" content=\"#ffffff\" />\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("    integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/styles.css\" />\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/36effec9ae.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://unpkg.com/boxicons@2.1.4/dist/boxicons.js\"></script>	\r\n");
      out.write("<title>All Uploaded Songs</title>\r\n");
      out.write("	<style>\r\n");
      out.write("	audio {\r\n");
      out.write("  background-color: var(--clr-medium);\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("audio::-webkit-media-controls-panel {\r\n");
      out.write("  background-color: var(--clr-medium);\r\n");
      out.write("}\r\n");
      out.write("audio::-webkit-media-controls-current-time-display {\r\n");
      out.write("  color: var(--clr-dark);\r\n");
      out.write("}\r\n");
      out.write("audio::-webkit-media-controls-time-remaining-display {\r\n");
      out.write("  color: var(--clr-dark);\r\n");
      out.write("}\r\n");
      out.write("audio::-webkit-media-controls-timeline {\r\n");
      out.write("	color: #fff;\r\n");
      out.write("}</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    ");
 if(session.getAttribute("AName") == null)
	response.sendRedirect("ArtistSignUp.jsp");

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"d-flex customLinearGradient\">\r\n");
      out.write("		<nav class=\"d-flex flex-column justify-content-between flex-shrink-0 p-3 vh-100 myBg-Light position-fixed\"\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("			style=\"width: 280px;\">\r\n");
      out.write("			<div>\r\n");
      out.write("				<a class=\"navbar-brand\" href=\"#\">\r\n");
      out.write("    <img src=\"./resources/headphones.svg\" class=\"mb-1\" alt=\"headphones\" width=\"30\" height=\"24\" />\r\n");
      out.write("    <span class=\"fs-4 mt-4 myText-dark\">Melosphere</span>\r\n");
      out.write("</a>\r\n");
      out.write("\r\n");
      out.write("				<hr>\r\n");
      out.write("				<ul class=\"nav nav-pills flex-column mb-auto\">\r\n");
      out.write("					  <li class=\"nav-item mb-3 mt-3\">\r\n");
      out.write("					<li class=\"nav-item mb-3\">\r\n");
      out.write("						<a href=\"ArtistUploadSongFile.jsp\" class=\"d-flex align-items-center text-white text-decoration-none L-Affiliate-Tagged L-Affiliate-Tagged\">\r\n");
      out.write("							<box-icon name='upload' type='solid' color='#ffffff'></box-icon>\r\n");
      out.write("							Upload Music\r\n");
      out.write("						</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					\r\n");
      out.write("					<li class=\"nav-item mb-3\">\r\n");
      out.write("						<a href=\"./ArtistDisplayAllSongsDummy.jsp\" class=\"d-flex align-items-center text-white text-decoration-none L-Affiliate-Tagged L-Affiliate-Tagged\" aria-current=\"page\">\r\n");
      out.write("							<box-icon name='music' type='solid' color='#ffffff'></box-icon>\r\n");
      out.write("							All Songs\r\n");
      out.write("						</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"dropdown\">\r\n");
      out.write("				<hr>\r\n");
      out.write("				<a href=\"#\"\r\n");
      out.write("					class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle L-Affiliate-Tagged\"\r\n");
      out.write("					data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("					<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${AName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong>\r\n");
      out.write("				</a>\r\n");
      out.write("				<ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\">\r\n");
      out.write("					<li><a class=\"dropdown-item L-Affiliate-Tagged\" href=\"ListenerLogIn.jsp\">Switch to Listener</a></li>\r\n");
      out.write("					<li><a class=\"dropdown-item L-Affiliate-Tagged\" href=\"./ArtistProfileDummy.jsp\">Profile</a></li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<hr class=\"dropdown-divider\">\r\n");
      out.write("					</li>\r\n");
      out.write("					<li><a class=\"dropdown-item L-Affiliate-Tagged\" href=\"./ArtistLogOut.jsp\">Log Out</a></li>					\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</nav>\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <main class=\"container-md py-4\" style=\"padding-left: 10em;\">\r\n");
      out.write("			<h2 class=\"fs-1 fw-bold\">All Songs</h2>\r\n");
      out.write("            <hr>\r\n");
      out.write("           \r\n");
      out.write("            <section class=\"mostPlayed mt-5\">\r\n");
      out.write("				\r\n");
      out.write("  ");

   
	 List<Song> AllSongs = (ArrayList<Song>)request.getAttribute("AllSongs");
    if(AllSongs != null && AllSongs.size() > 0) {
        
      out.write("\r\n");
      out.write("       <div class=\"row\">\r\n");
      out.write("   				 	<div class=\"col-3\"> Song    </div>	\r\n");
      out.write("    				<div class=\"col-4\"> Genre   </div>\r\n");
      out.write("   					<div class=\"col-2\"> Date    </div>\r\n");
      out.write("   					<div class=\"col-2\"> Streams </div>\r\n");
      out.write("      		</div>\r\n");
      out.write("        ");

        for(Song song : AllSongs) {
            
  
      out.write("\r\n");
      out.write("  \r\n");
      out.write("    	\r\n");
      out.write("      	\r\n");
      out.write("      	<div class=\"p-3 row text-whi te-50 shadow myBg-gray rounded my-3\" >\r\n");
      out.write("				\r\n");
      out.write("				   <div class=\"col-3\" onclick=\"playSong('");
      out.print( song.getSName() );
      out.write("')\" style=\"cursor:pointer;\"> ");
      out.print( song.getSName() );
      out.write("  </div>	 	\r\n");
      out.write("				  <div class=\"col-4\">");
      out.print( song.getGenre() );
      out.write("</div>\r\n");
      out.write("					<div class=\"col-2\">");
      out.print( song.getRDate() );
      out.write("</div>\r\n");
      out.write("					<div class=\"col-2\">");
      out.print( song.getStreams() );
      out.write("</div>\r\n");
      out.write("						\r\n");
      out.write("\r\n");
      out.write("					<div class=\"dropdown col-1\">\r\n");
      out.write("  					<a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none L-Affiliate-Tagged\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("   					<box-icon name='dots-horizontal-rounded' color='#ffffff'></box-icon>\r\n");
      out.write(" 					</a>\r\n");
      out.write("  					<ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\">\r\n");
      out.write("    				<li><a class=\"dropdown-item L-Affiliate-Tagged\" href=\"#\" onclick=\"copyToClipboard()\">  Share  </a></li>\r\n");
      out.write("    				<li><form action=\"./ArtistDeleteSong.jsp\" class=\"dropdown-item L-Affiliate-Tagged\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"SName\" id=\"SName\" value=\"");
      out.print( song.getSName() );
      out.write("\">\r\n");
      out.write("                            <button type=\"submit\" class=\"myBtn-red px-5\" >Delete </button>\r\n");
      out.write("                             </form>\r\n");
      out.write("                            </li>\r\n");
      out.write("						\r\n");
      out.write("  					</ul>\r\n");
      out.write("  			<audio id=\"audioPlayer_");
      out.print( song.getSName() );
      out.write("\" controls style=\" display:none; position: fixed; left: 5%; width: 30%; height:5% ;\">\r\n");
      out.write("                    <source id=\"audioSource_");
      out.print( song.getSName() );
      out.write("\" type=\"audio/mpeg\">\r\n");
      out.write("  </audio>	\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("      	\r\n");
      out.write("  ");

  
        }
    } 
    else {
  
      out.write("\r\n");
      out.write("\r\n");
      out.write("   No songs found.\r\n");
      out.write("\r\n");
      out.write("  ");

    }
  
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("		</main>\r\n");
      out.write("	</div>\r\n");
      out.write("<script>\r\n");
      out.write("function playSong(songName) {\r\n");
      out.write("	var xmlhttp = new XMLHttpRequest();\r\n");
      out.write("	  xmlhttp.onreadystatechange = function() {\r\n");
      out.write("	    if (this.readyState == 4 && this.status == 200) {\r\n");
      out.write("	      var songBlob = this.response;\r\n");
      out.write("	      var audioUrl = URL.createObjectURL(songBlob);\r\n");
      out.write("	      var audioPlayer = document.getElementById(\"audioPlayer\");\r\n");
      out.write("	      var audioSource = document.getElementById(\"audioSource\");\r\n");
      out.write("	      audioSource.src = audioUrl;\r\n");
      out.write("	      audioPlayer.style.display = \"block\";\r\n");
      out.write("	      audioPlayer.style.width = \"73.5%\";\r\n");
      out.write("	      audioPlayer.style.borderRadius = \"10px\";\r\n");
      out.write("	      audioPlayer.style.backgroundColor = \"darak-blue\";\r\n");
      out.write("	      audioPlayer.load();\r\n");
      out.write("	      audioPlayer.play();\r\n");
      out.write("\r\n");
      out.write("	    }\r\n");
      out.write("	  };\r\n");
      out.write("\r\n");
      out.write("	  if (songName) { // called from row click\r\n");
      out.write("	    xmlhttp.open(\"GET\", \"ArtistPlaySongFileServlet?SongName=\" + songName, true);\r\n");
      out.write("	  } else { // called from search box\r\n");
      out.write("	    var songName = document.getElementById(\"songName\").value;\r\n");
      out.write("	    xmlhttp.open(\"GET\", \"ArtistPlaySongFileServlet?SongName=\" + songName, true);\r\n");
      out.write("	  }\r\n");
      out.write("\r\n");
      out.write("	  xmlhttp.responseType = \"blob\";\r\n");
      out.write("	  xmlhttp.send();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("  function showSearch() {\r\n");
      out.write("\r\n");
      out.write("    var searchBar = document.getElementById(\"searchBar\");\r\n");
      out.write("\r\n");
      out.write("    if (searchBar.style.display === \"none\") {\r\n");
      out.write("\r\n");
      out.write("      searchBar.style.display = \"block\";\r\n");
      out.write("\r\n");
      out.write("    } else {\r\n");
      out.write("\r\n");
      out.write("      searchBar.style.display = \"none\";\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function copyToClipboard() {\r\n");
      out.write("    // Create a temporary element for copying the text\r\n");
      out.write("    const tempElement = document.createElement(\"textarea\");\r\n");
      out.write("    tempElement.value = \"Text to copy to clipboard\";\r\n");
      out.write("    document.body.appendChild(tempElement);\r\n");
      out.write("\r\n");
      out.write("    // Select the text and copy to clipsboard\r\n");
      out.write("    tempElement.select();\r\n");
      out.write("    document.execCommand(\"copy\");\r\n");
      out.write("    document.body.removeChild(tempElement);\r\n");
      out.write("\r\n");
      out.write("    // Show the \"copied to clipboard\" message\r\n");
      out.write("    const messageElement = document.createElement(\"div\");\r\n");
      out.write("    messageElement.innerHTML = \"Link copied to clipboard!\";\r\n");
      out.write("    messageElement.style.position = \"fixed\";\r\n");
      out.write("    messageElement.style.top = \"20%\";\r\n");
      out.write("    messageElement.style.left = \"85%\";\r\n");
      out.write("    messageElement.style.transform = \"translate(-50%, -50%)\";\r\n");
      out.write("    messageElement.style.padding = \"10px\";\r\n");
      out.write("    messageElement.style.background = \"transparent\";\r\n");
      out.write("    messageElement.style.color = \"#FADA5E\";\r\n");
      out.write("    messageElement.style.borderRadius = \"0px\";\r\n");
      out.write("    messageElement.style.zIndex = \"9999\";\r\n");
      out.write("    document.body.appendChild(messageElement);\r\n");
      out.write("\r\n");
      out.write("    // Remove the message after a few seconds\r\n");
      out.write("    setTimeout(() => {\r\n");
      out.write("      document.body.removeChild(messageElement);\r\n");
      out.write("    }, 3000);\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form action=\"ArtistLogOut.jsp\">\r\n");
      out.write("  <input type=\"submit\" value=\"Log Out\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<div class=\"audio-container\" >\r\n");
      out.write("			<audio   id=\"audioPlayer\" controls style=\"display:none; margin-left: 21%;\" >\r\n");
      out.write("  <source id=\"audioSource\" type=\"audio/mpeg\">\r\n");
      out.write("</audio>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("<form action=\"ArtistDeleteProfileDummy.jsp\">\r\n");
      out.write("  <input type=\"submit\" value=\"Delete Artist Account\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js\"\r\n");
      out.write("		integrity=\"sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.min.js\"\r\n");
      out.write("		integrity=\"sha384-kjU+l4N0Yf4ZOJErLsIcvOU2qSb74wXpOhqTvwVx3OElZRweTnQ6d31fXEoRD1Jy\"\r\n");
      out.write("		crossorigin=\"anonymous	\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
